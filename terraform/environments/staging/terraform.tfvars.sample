# Staging Environment Configuration
# Copy this file to terraform.tfvars and update with your values

# Basic Configuration
project_name = "epic"
environment  = "staging"
aws_region   = "ap-southeast-4"

# Notification Configuration
notification_email              = "your-email@example.com"
compliance_notification_email   = "security@example.com"
cost_anomaly_email              = "finance@example.com"
notification_emails             = ["your-email@example.com", "team@example.com"]

# Web Application Configuration
instance_type     = "t3.small"
min_capacity      = 1
max_capacity      = 2
desired_capacity  = 1
health_check_path = "/health"
application_port  = 3000

# Optional: SSL/TLS Configuration (uncomment if you have certificates)
# ssl_certificate_arn      = "arn:aws:acm:ap-southeast-4:ACCOUNT:certificate/CERT-ID"
# domain_name              = "staging.yourdomain.com"
# react_ssl_certificate_arn = "arn:aws:acm:ap-southeast-4:ACCOUNT:certificate/CERT-ID"
# react_domain_name        = "app-staging.yourdomain.com"

# React Hosting Configuration
enable_static_hosting    = true
enable_serverless_hosting = false

# Serverless Configuration (if enabled)
serverless_cpu          = 256
serverless_memory       = 512
serverless_min_capacity = 1
serverless_max_capacity = 2

# Database Backup Configuration
backup_retention_days         = 7
backup_schedule_expression    = "cron(0 2 * * ? *)"  # Daily at 2 AM UTC
enable_cross_region_backup    = false
backup_destination_region     = "ap-southeast-2"
enable_point_in_time_recovery = false

# Monitoring Thresholds
cpu_threshold_high          = 80
memory_threshold_high       = 80
disk_threshold_high         = 80
alb_response_time_threshold = 2
alb_5xx_threshold          = 10
enable_custom_metrics      = true
enable_log_insights        = true
log_retention_days         = 14

# Cost Management
monthly_budget_limit      = 200
budget_alert_threshold    = 80
budget_forecast_threshold = 100

# Service-specific Budgets
service_budgets = {
  ec2 = {
    service_name     = "Amazon Elastic Compute Cloud - Compute"
    limit           = 50
    alert_threshold = 80
  }
  s3 = {
    service_name     = "Amazon Simple Storage Service"
    limit           = 25
    alert_threshold = 80
  }
  rds = {
    service_name     = "Amazon Relational Database Service"
    limit           = 30
    alert_threshold = 80
  }
}

# Cost Anomaly Detection
anomaly_threshold_amount = 25
monitored_services = [
  "Amazon Elastic Compute Cloud - Compute",
  "Amazon Simple Storage Service",
  "Amazon Relational Database Service"
]

# Cost Optimization
enable_cost_recommendations   = true
cost_optimization_schedule    = "cron(0 9 * * MON *)"  # Every Monday at 9 AM UTC
recommendation_cost_threshold = 10

# Reserved Instances (disabled for staging)
enable_ri_recommendations = false
ri_payment_option        = "PARTIAL_UPFRONT"
ri_term_years           = "ONE_YEAR"

# S3 Lifecycle Management
enable_s3_lifecycle_recommendations = true
s3_ia_transition_days               = 30
s3_glacier_transition_days          = 90

# Compliance Monitoring
enable_config_rules           = true
enable_security_hub_standards = true
enable_custom_compliance      = true
compliance_check_schedule     = "cron(0 8 * * MON *)"  # Every Monday at 8 AM UTC

# Compliance Standards
cis_benchmark_version     = "1.2.0"
aws_foundational_standard = true
pci_dss_standard         = false  # Disabled for staging

# Custom Compliance Rules
custom_compliance_rules = {
  encryption_check = {
    rule_name       = "s3-bucket-encryption-enabled"
    description     = "Checks if S3 buckets have encryption enabled"
    compliance_type = "NON_COMPLIANT"
    resource_types  = ["AWS::S3::Bucket"]
    evaluation_mode = "DETECTIVE"
  }
  backup_enabled = {
    rule_name       = "rds-backup-enabled"
    description     = "Checks if RDS instances have automated backups enabled"
    compliance_type = "NON_COMPLIANT"
    resource_types  = ["AWS::RDS::DBInstance"]
    evaluation_mode = "DETECTIVE"
  }
}

# Additional Resource Tags
additional_tags = {
  Owner       = "DevOps Team"
  Project     = "EPiC Infrastructure"
  Environment = "staging"
  CostCenter  = "Engineering"
  Purpose     = "Testing and Development"
}